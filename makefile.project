#! /bin/make

.PHONY: debug release gold
.PHONY: clean cleanbuilddir
.PHONY: cleandebug cleanrelease cleangold
.PHONY: rebuilddebug rebuildrelease rebuildgold
.PHONY: tags cleantags rebuildtags
.PHONY: buildall cleanall rebuildall
.PHONY: runall fulltest

BASE_DIR:=$(shell cd .. ; pwd )
ROOT_DIR:=$(shell cd $(BASE_DIR)/.. ; pwd )
ifdef WINDIR
	BASE_DIR:=$(shell cygpath -m $(BASE_DIR) )
	ROOT_DIR:=$(shell cygpath -m $(ROOT_DIR) )
	EXE_EXTENSION:=.exe
	BUILD:=build
endif


BACKUP_DIR:=$(ROOT_DIR)/Backup
BACKUP_TIMESTAMP:=$(shell date +%Y_%m_%d_%H_%M_%S )

BUILD_ROOT:=Build
BUILD_ROOT:=$(BASE_DIR)/$(BUILD_ROOT)
BUILD_DIR=$(BUILD_ROOT)/$(PROJECT)_$(CONFIG)
PROJECT_DIR:=$(BASE_DIR)/$(PROJECT)
CLEAN=$(BUILD)

default: build

debug: CONFIG:=DEBUG
debug: TARGET:=debug
debug: CLEAN=$(BUILD)
debug: compile updateexe

release: CONFIG:=RELWITHDEBINFO
release: TARGET:=release
release: CLEAN=$(BUILD)
release: compile updateexe

gold: CONFIG:=RELEASE
gold: TARGET:=gold
gold: CLEAN=$(BUILD)
gold: compile updateexe

cleandebug: CONFIG:=DEBUG
cleandebug: CLEAN=clean
cleandebug: compile
cleandebug: cleandir

cleanrelease: CONFIG:=RELWITHDEBINFO
cleanrelease: CLEAN=clean
cleanrelease: compile
cleanrelease: cleandir

cleangold: CONFIG:=RELEASE
cleangold: CLEAN=clean
cleangold: compile
cleangold: cleandir

rebuilddebug:
	@$(MAKE) --no-print-directory cleandebug
	@$(MAKE) --no-print-directory debug

rebuildrelease:
	@$(MAKE) --no-print-directory cleanrelease
	@$(MAKE) --no-print-directory release

rebuildgold:
	@$(MAKE) --no-print-directory cleangold
	@$(MAKE) --no-print-directory gold

compile:
	@echo ----- $(CLEAN) $(CONFIG) -----
	@cp $(PROJECT_DIR)/$(PROJECT).cmake $(BASE_DIR)/CMakeLists.txt
	@mkdir -p $(BUILD_DIR)
ifdef WINDIR
	@cd $(BUILD_DIR) && cmake -DCMAKE_BUILD_TYPE=$(CONFIG) $(BASE_DIR) $* && MSBuild.exe $(PROJECT).sln /t:$(CLEAN) /p:Configuration=$(CONFIG) /p:Platform="Win32"
else
	@cd $(BUILD_DIR) && cmake -DCMAKE_BUILD_TYPE=$(CONFIG) $(BASE_DIR) $* && $(MAKE) --no-print-directory $(CLEAN)
endif

BASE_EXE_NAME = $(PROJECT_DIR)/$(EXE_NAME)$(EXE_EXTENSION)
TARGET_EXE_NAME = $(PROJECT_DIR)/$(EXE_NAME)_$(TARGET)$(EXE_EXTENSION)

updateexe:
ifdef WINDIR
	@cp -v $(BUILD_DIR)/$(PROJECT)/$(CONFIG)/$(EXE_NAME)$(EXE_EXTENSION) $(BASE_EXE_NAME)
else
	@cp -v $(BUILD_DIR)/$(PROJECT)/$(EXE_NAME) $(BASE_EXE_NAME)
endif
	@cp -v $(BASE_EXE_NAME) $(TARGET_EXE_NAME)
	@ls -lh $(BASE_EXE_NAME)
	@ls -lh $(TARGET_EXE_NAME)

clean:	cleandebug

build: debug

rebuild: rebuilddebug

run: debug rundebug

tags:
	@echo ----- tags -----
	@$(MAKE) -C $(BASE_DIR) -f makefile.tags --no-print-directory

cleantags:
	@echo ----- clean tags -----
	@$(MAKE) -C $(BASE_DIR) -f makefile.tags --no-print-directory clean

rebuildtags: cleantags tags

cleandir:
	@echo "...Removing $(BUILD_DIR)..."
	@rm -rf $(BUILD_DIR)

backup:
	@mkdir -p $(BACKUP_DIR)
	cd $(ROOT_DIR) && tar cvfz Backup/lj_fun_$(BACKUP_TIMESTAMP).tar.gz --exclude="*.orig" --exclude="*.suo" --exclude="*.swp" --exclude="*.exe" --exclude="*/.git" --exclude="*/Build" --exclude="*_debug" --exclude="*_release" --exclude="*_gold" lj_fun
	@ls -lh $(BACKUP_DIR)/lj_fun_$(BACKUP_TIMESTAMP).tar.gz

cleanall:
	@$(MAKE) --no-print-directory cleandebug
	@$(MAKE) --no-print-directory cleanrelease
	@$(MAKE) --no-print-directory cleangold
	@echo "...Removing $(BUILD_ROOT)..."
	@rm -rf $(BUILD_ROOT)
	@$(MAKE) --no-print-directory cleantags

buildall:
	@$(MAKE) --no-print-directory debug
	@$(MAKE) --no-print-directory release
	@$(MAKE) --no-print-directory gold

rebuildall: cleanall buildall

test:
	@echo "PROJECT=$(PROJECT)"
	@echo "BUILD_ROOT=$(BUILD_ROOT)"
	@echo "BASE_DIR=$(BASE_DIR)"
	@echo "BUILD_DIR=$(BUILD_DIR)"
	@echo "EXE_NAME=$(EXE_NAME)"
	@echo "RPOJECT_DIR=$(PROJECT_DIR)"
	@echo "ROOT_DIR=$(ROOT_DIR)"

rundebug: 
	$(EXE_NAME)_debug

runrelease: 
	$(EXE_NAME)_release

rungold: 
	$(EXE_NAME)_gold

runall: buildall
	$(EXE_NAME)_debug
	$(EXE_NAME)_release
	$(EXE_NAME)_gold

fulltest: rebuildall runall


