SET( GLUT_ROOT_PATH $ENV{GLUT_ROOT_PATH} )
SET( SDL_BUILDING_LIBRARY TRUE)

Find_Package( OpenGL REQUIRED )
Find_Package( SDL REQUIRED )
Find_Package( GLUT REQUIRED )

#Find_Library( SDL_LIBRARY SDL PATHS $ENV{SDL_ROOT}/lib )

IF ( NOT SDL_FOUND )
    MESSAGE( FATAL_ERROR "SDL not found" )
ENDIF ( NOT SDL_FOUND )

IF ( NOT GLUT_FOUND )
    MESSAGE( FATAL_ERROR "GLUT not found" )
ENDIF ( NOT GLUT_FOUND )

IF ( NOT OPENGL_FOUND )
    MESSAGE( FATAL_ERROR "OPENGL not found" )
ENDIF ( NOT OPENGL_FOUND )

MESSAGE( "CMAKE_BUILD_TYPE = ${CMAKE_BUILD_TYPE}" )
MESSAGE( "SDL_LIBRARY = ${SDL_LIBRARY}" )
MESSAGE( "GLUT_LIBRARY = ${GLUT_LIBRARY}" )
MESSAGE( "OPENGL_LIBRARY = ${OPENGL_LIBRARY}" )
MESSAGE( "GL_LIBRARY = ${GL_LIBRARY}" )

SET( CMAKE_C_FLAGS_DEBUG "-DLJ_DEBUG" )
SET( CMAKE_C_FLAGS_RELWITHDEBINFO "-DLJ_NDEBUG" )
SET( CMAKE_C_FLAGS_RELEASE "-DLJ_GOLD -DLJ_NDEBUG" )

SET( GLOBAL_DEFINITIONS )
SET( GLOBAL_INCLUDE_DIRECTORIES )
SET( GLOBAL_LINK_DIRECTORIES )

# Global definitions
IF ( MSVC )

    SET( GLOBAL_CFLAGS -W4 -WX -DPLATFORM_PC )
    SET( CMAKE_C_FLAGS_DEBUG ${CMAKE_C_FLAGS_DEBUG} -Od -RTC -Yd -Zi )
    SET( CMAKE_C_FLAGS_RELWITHDEBINFO ${CMAKE_C_FLAGS_RELWITHDEBINFO} -O2 -RTC -Yd -Zi )
    SET( CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE} -O2 )

ELSE ( MSVC )

    SET( GLOBAL_CFLAGS -Wextra -Wall -Werror -Wdeclaration-after-statement -fstrict-aliasing -DPLATFORM_LINUX )
    SET( CMAKE_C_FLAGS_DEBUG ${CMAKE_C_FLAGS_DEBUG} -g )
    SET( CMAKE_C_FLAGS_RELWITHDEBINFO ${CMAKE_C_FLAGS_RELWITHDEBINFO} -g -O2 )
    SET( CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE} -O4 )

ENDIF ( MSVC )

SET( GLOBAL_INCLUDE_DIRECTORIES ${GLOBAL_INCLUDE_DIRECTORIES} ${SDL_INCLUDE_DIR} )
SET( GLOBAL_INCLUDE_DIRECTORIES ${GLOBAL_INCLUDE_DIRECTORIES} ${GLUT_INCLUDE_DIR} )

SET( GLOBAL_DEFINITIONS ${GLOBAL_CFLAGS} ${CONFIG_CFLAGS} )
MESSAGE( "GLOBAL_DEFINITIONS = ${GLOBAL_DEFINITIONS}" )

MESSAGE( "GLOBAL_INCLUDE_DIRECTORIES = ${GLOBAL_INCLUDE_DIRECTORIES}" )
MESSAGE( "GLOBAL_LINK_DIRECTORIES = ${GLOBAL_LINK_DIRECTORIES}" )


